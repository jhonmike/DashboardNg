{"version":3,"file":"checkbox.spec.js","sourceRoot":"","sources":["checkbox.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    it,\n    beforeEach,\n    inject,\n    async,\n    fakeAsync,\n    flushMicrotasks\n} from '@angular/core/testing';\nimport {FORM_DIRECTIVES, NgModel, NgControl} from '@angular/common';\nimport {TestComponentBuilder, ComponentFixture} from '@angular/compiler/testing';\nimport {Component, DebugElement} from '@angular/core';\nimport {By} from '@angular/platform-browser';\nimport {MdCheckbox} from './checkbox';\nimport {PromiseCompleter} from '../../core/async/promise-completer';\n\n\n\ndescribe('MdCheckbox', () => {\n  let builder: TestComponentBuilder;\n  let fixture: ComponentFixture<any>;\n\n  beforeEach(inject([TestComponentBuilder], (tcb: TestComponentBuilder) => {\n    builder = tcb;\n  }));\n\n  describe('basic behaviors', () => {\n    let checkboxDebugElement: DebugElement;\n    let checkboxNativeElement: HTMLElement;\n    let checkboxInstance: MdCheckbox;\n    let testComponent: SingleCheckbox;\n\n    beforeEach(async(() => {\n      builder.createAsync(SingleCheckbox).then(f => {\n        fixture = f;\n        fixture.detectChanges();\n\n        checkboxDebugElement = fixture.debugElement.query(By.directive(MdCheckbox));\n        checkboxNativeElement = checkboxDebugElement.nativeElement;\n        checkboxInstance = checkboxDebugElement.componentInstance;\n        testComponent = fixture.debugElement.componentInstance;\n      });\n    }));\n\n    it('should add and remove the checked state', () => {\n      expect(checkboxInstance.checked).toBe(false);\n      expect(checkboxNativeElement.classList).not.toContain('md-checkbox-checked');\n      expect(checkboxNativeElement.getAttribute('aria-checked')).toBe('false');\n\n      testComponent.isChecked = true;\n      fixture.detectChanges();\n\n      expect(checkboxInstance.checked).toBe(true);\n      expect(checkboxNativeElement.classList).toContain('md-checkbox-checked');\n      expect(checkboxNativeElement.getAttribute('aria-checked')).toBe('true');\n\n      testComponent.isChecked = false;\n      fixture.detectChanges();\n\n      expect(checkboxInstance.checked).toBe(false);\n      expect(checkboxNativeElement.classList).not.toContain('md-checkbox-checked');\n      expect(checkboxNativeElement.getAttribute('aria-checked')).toBe('false');\n    });\n\n    it('should add and remove indeterminate state', () => {\n      expect(checkboxNativeElement.classList).not.toContain('md-checkbox-checked');\n      expect(checkboxNativeElement.getAttribute('aria-checked')).toBe('false');\n\n      testComponent.isIndeterminate = true;\n      fixture.detectChanges();\n\n      expect(checkboxNativeElement.classList).toContain('md-checkbox-indeterminate');\n      expect(checkboxNativeElement.getAttribute('aria-checked')).toBe('mixed');\n\n      testComponent.isIndeterminate = false;\n      fixture.detectChanges();\n\n      expect(checkboxNativeElement.classList).not.toContain('md-checkbox-indeterminate');\n      expect(checkboxNativeElement.getAttribute('aria-checked')).toBe('false');\n    });\n\n    it('should toggle checked state on click', () => {\n      expect(checkboxInstance.checked).toBe(false);\n\n      checkboxNativeElement.click();\n      fixture.detectChanges();\n\n      expect(checkboxInstance.checked).toBe(true);\n\n      checkboxNativeElement.click();\n      fixture.detectChanges();\n\n      expect(checkboxInstance.checked).toBe(false);\n    });\n\n    it('should change from indeterminate to checked on click', () => {\n      testComponent.isIndeterminate = true;\n      fixture.detectChanges();\n\n      checkboxNativeElement.click();\n      fixture.detectChanges();\n\n      expect(checkboxInstance.checked).toBe(true);\n      expect(checkboxInstance.indeterminate).toBe(false);\n\n      checkboxNativeElement.click();\n      fixture.detectChanges();\n\n      expect(checkboxInstance.checked).toBe(false);\n      expect(checkboxInstance.indeterminate).toBe(false);\n    });\n\n    it('should add and remove disabled state', () => {\n      expect(checkboxInstance.disabled).toBe(false);\n      expect(checkboxNativeElement.classList).not.toContain('md-checkbox-disabled');\n      expect(checkboxNativeElement.tabIndex).toBe(0);\n\n      testComponent.isDisabled = true;\n      fixture.detectChanges();\n\n      expect(checkboxInstance.disabled).toBe(true);\n      expect(checkboxNativeElement.classList).toContain('md-checkbox-disabled');\n      expect(checkboxNativeElement.hasAttribute('tabindex')).toBe(false);\n\n      testComponent.isDisabled = false;\n      fixture.detectChanges();\n\n      expect(checkboxInstance.disabled).toBe(false);\n      expect(checkboxNativeElement.classList).not.toContain('md-checkbox-disabled');\n      expect(checkboxNativeElement.tabIndex).toBe(0);\n    });\n\n    it('should not toggle `checked` state upon interation while disabled', () => {\n      testComponent.isDisabled = true;\n      fixture.detectChanges();\n\n      checkboxNativeElement.click();\n      expect(checkboxInstance.checked).toBe(false);\n    });\n\n    it('should overwrite indeterminate state when checked is re-set', () => {\n      testComponent.isIndeterminate = true;\n      fixture.detectChanges();\n\n      testComponent.isChecked = true;\n      fixture.detectChanges();\n\n      expect(checkboxInstance.checked).toBe(true);\n      expect(checkboxInstance.indeterminate).toBe(false);\n    });\n\n    it('should preserve the user-provided id', () => {\n      expect(checkboxNativeElement.id).toBe('simple-check');\n    });\n\n    it('should create a label element with its own unique id for aria-labelledby', () => {\n      let labelElement = checkboxNativeElement.querySelector('label');\n      expect(labelElement.id).toBeTruthy();\n      expect(labelElement.id).not.toBe(checkboxNativeElement.id);\n      expect(checkboxNativeElement.getAttribute('aria-labelledby')).toBe(labelElement.id);\n    });\n\n    it('should project the checkbox content into the label element', () => {\n      let labelElement = checkboxNativeElement.querySelector('label');\n\n      expect(labelElement.textContent.trim()).toBe('Simple checkbox');\n    });\n\n    it('should mark the host element with role=\"checkbox\"', () => {\n      expect(checkboxNativeElement.getAttribute('role')).toBe('checkbox');\n    });\n\n    it('should make the host element a tab stop', () => {\n      expect(checkboxNativeElement.tabIndex).toBe(0);\n    });\n\n    it('should add a css class to end-align the checkbox', () => {\n      testComponent.alignment = 'end';\n      fixture.detectChanges();\n\n      expect(checkboxNativeElement.classList).toContain('md-checkbox-align-end');\n    });\n\n    it('should emit a change event when the `checked` value changes', () => {\n      // TODO(jelbourn): this *should* work with async(), but fixture.whenStable currently doesn't\n      // know to look at pending macro tasks.\n      // See https://github.com/angular/angular/issues/8389\n      // As a short-term solution, use a promise (which jasmine knows how to understand).\n      let promiseCompleter = new PromiseCompleter();\n      checkboxInstance.change.subscribe(() => {\n        promiseCompleter.resolve();\n      });\n\n      testComponent.isChecked = true;\n      fixture.detectChanges();\n\n      return promiseCompleter.promise;\n    });\n\n    it('should stop propagation of interaction events when disabed', () => {\n      testComponent.isDisabled = true;\n      fixture.detectChanges();\n\n      checkboxNativeElement.click();\n      fixture.detectChanges();\n\n      expect(testComponent.parentElementClicked).toBe(false);\n    });\n\n    it('should not scroll when pressing space on the checkbox', () => {\n      let keyboardEvent = dispatchKeyboardEvent('keydown', checkboxNativeElement, ' ');\n      fixture.detectChanges();\n\n      expect(keyboardEvent.preventDefault).toHaveBeenCalled();\n    });\n\n    it('should toggle the checked state when pressing space', () => {\n      dispatchKeyboardEvent('keyup', checkboxNativeElement, ' ');\n      fixture.detectChanges();\n\n      expect(checkboxInstance.checked).toBe(true);\n\n      dispatchKeyboardEvent('keyup', checkboxNativeElement, ' ');\n      fixture.detectChanges();\n\n      expect(checkboxInstance.checked).toBe(false);\n    });\n\n    it('should not toggle the checked state when pressing space if disabled', () => {\n      testComponent.isDisabled = true;\n      fixture.detectChanges();\n\n      dispatchKeyboardEvent('keyup', checkboxNativeElement, ' ');\n      fixture.detectChanges();\n\n      expect(checkboxInstance.checked).toBe(false);\n      expect(testComponent.parentElementKeyedUp).toBe(false);\n    });\n\n    describe('state transition css classes', () => {\n      it('should transition unchecked -> checked -> unchecked', () => {\n        testComponent.isChecked = true;\n        fixture.detectChanges();\n        expect(checkboxNativeElement.classList).toContain('md-checkbox-anim-unchecked-checked');\n\n        testComponent.isChecked = false;\n        fixture.detectChanges();\n        expect(checkboxNativeElement.classList).not.toContain('md-checkbox-anim-unchecked-checked');\n        expect(checkboxNativeElement.classList).toContain('md-checkbox-anim-checked-unchecked');\n      });\n\n      it('should transition unchecked -> indeterminate -> unchecked', () => {\n        testComponent.isIndeterminate = true;\n        fixture.detectChanges();\n\n        expect(checkboxNativeElement.classList)\n            .toContain('md-checkbox-anim-unchecked-indeterminate');\n\n        testComponent.isIndeterminate = false;\n        fixture.detectChanges();\n\n        expect(checkboxNativeElement.classList)\n            .not.toContain('md-checkbox-anim-unchecked-indeterminate');\n        expect(checkboxNativeElement.classList)\n            .toContain('md-checkbox-anim-indeterminate-unchecked');\n      });\n\n      it('should transition indeterminate -> checked', () => {\n        testComponent.isIndeterminate = true;\n        fixture.detectChanges();\n\n        testComponent.isChecked = true;\n        fixture.detectChanges();\n\n        expect(checkboxNativeElement.classList).not.toContain(\n            'md-checkbox-anim-unchecked-indeterminate');\n        expect(checkboxNativeElement.classList).toContain('md-checkbox-anim-indeterminate-checked');\n      });\n\n      it('should not apply transition classes when there is no state change', () => {\n        testComponent.isChecked = checkboxInstance.checked;\n        fixture.detectChanges();\n        expect(checkboxNativeElement).not.toMatch(/^md\\-checkbox\\-anim/g);\n\n        testComponent.isIndeterminate = checkboxInstance.indeterminate;\n        expect(checkboxNativeElement).not.toMatch(/^md\\-checkbox\\-anim/g);\n      });\n\n      it('should not initially have any transition classes', () => {\n        expect(checkboxNativeElement).not.toMatch(/^md\\-checkbox\\-anim/g);\n      });\n    });\n  });\n\n  describe('with provided aria-label ', () => {\n    let checkboxDebugElement: DebugElement;\n    let checkboxNativeElement: HTMLElement;\n\n    it('should use the provided aria-label', async(() => {\n      builder.createAsync(CheckboxWithAriaLabel).then(f => {\n        fixture = f;\n        checkboxDebugElement = fixture.debugElement.query(By.directive(MdCheckbox));\n        checkboxNativeElement = checkboxDebugElement.nativeElement;\n\n        expect(checkboxNativeElement.getAttribute('aria-label')).toBe('Super effective');\n      });\n    }));\n  });\n\n  describe('with provided tabIndex', () => {\n    let checkboxDebugElement: DebugElement;\n    let checkboxNativeElement: HTMLElement;\n    let testComponent: CheckboxWithTabIndex;\n\n    beforeEach(async(() => {\n      builder.createAsync(CheckboxWithTabIndex).then(f => {\n        fixture = f;\n        fixture.detectChanges();\n\n        testComponent = fixture.debugElement.componentInstance;\n        checkboxDebugElement = fixture.debugElement.query(By.directive(MdCheckbox));\n        checkboxNativeElement = checkboxDebugElement.nativeElement;\n      });\n    }));\n\n    it('should preserve any given tabIndex', async(() => {\n      expect(checkboxNativeElement.tabIndex).toBe(7);\n    }));\n\n    it('should preserve given tabIndex when the checkbox is disabled then enabled', () => {\n      testComponent.isDisabled = true;\n      fixture.detectChanges();\n\n      testComponent.customTabIndex = 13;\n      fixture.detectChanges();\n\n      testComponent.isDisabled = false;\n      fixture.detectChanges();\n\n      expect(checkboxNativeElement.tabIndex).toBe(13);\n    });\n  });\n\n  describe('with multiple checkboxes', () => {\n    beforeEach(async(() => {\n      builder.createAsync(MultipleCheckboxes).then(f => {\n        fixture = f;\n        fixture.detectChanges();\n      });\n    }));\n\n    it('should assign a unique id to each checkbox', () => {\n      let [firstId, secondId] =\n          fixture.debugElement.queryAll(By.directive(MdCheckbox))\n          .map(debugElement => debugElement.nativeElement.id);\n\n      expect(firstId).toBeTruthy();\n      expect(secondId).toBeTruthy();\n      expect(firstId).not.toEqual(secondId);\n    });\n  });\n\n  describe('with ngModel and ngControl', () => {\n    beforeEach(async(() => {\n      builder.createAsync(CheckboxWithFormDirectives).then(f => {\n        f.detectChanges();\n        fixture = f;\n      });\n    }));\n\n    it('should be in pristine, untouched, and valid states initially', fakeAsync(() => {\n      flushMicrotasks();\n\n      let checkboxElement = fixture.debugElement.query(By.directive(MdCheckbox));\n      let ngControl = <NgControl> checkboxElement.injector.get(NgControl);\n\n      expect(ngControl.valid).toBe(true);\n      expect(ngControl.pristine).toBe(true);\n      expect(ngControl.touched).toBe(false);\n\n      // TODO(jelbourn): test that `touched` and `pristine` state are modified appropriately.\n      // This is currently blocked on issues with async() and fakeAsync().\n    }));\n  });\n\n});\n\n\n/** Simple component for testing a single checkbox. */\n@Component({\n  directives: [MdCheckbox],\n  template: `\n  <div (click)=\"parentElementClicked = true\" (keyup)=\"parentElementKeyedUp = true\">    \n    <md-checkbox \n        id=\"simple-check\"\n        [align]=\"alignment\"\n        [checked]=\"isChecked\" \n        [indeterminate]=\"isIndeterminate\" \n        [disabled]=\"isDisabled\"\n        (change)=\"changeCount = changeCount + 1\">\n      Simple checkbox\n    </md-checkbox>\n  </div>`\n})\nclass SingleCheckbox {\n  alignment: string = 'start';\n  isChecked: boolean = false;\n  isIndeterminate: boolean = false;\n  isDisabled: boolean = false;\n  parentElementClicked: boolean = false;\n  parentElementKeyedUp: boolean = false;\n  lastKeydownEvent: Event = null;\n}\n\n/** Simple component for testing an MdCheckbox with ngModel and ngControl. */\n@Component({\n  directives: [MdCheckbox, FORM_DIRECTIVES, NgModel],\n  template: `\n    <form>\n      <md-checkbox ngControl=\"cb\" [(ngModel)]=\"isGood\">Be good</md-checkbox>\n    </form>\n  `,\n})\nclass CheckboxWithFormDirectives {\n  isGood: boolean = false;\n}\n\n/** Simple test component with multiple checkboxes. */\n@Component(({\n  directives: [MdCheckbox],\n  template: `\n    <md-checkbox>Option 1</md-checkbox>\n    <md-checkbox>Option 2</md-checkbox>\n  `\n}))\nclass MultipleCheckboxes { }\n\n\n/** Simple test component with tabIndex */\n@Component({\n  directives: [MdCheckbox],\n  template: `\n    <md-checkbox [tabindex]=\"customTabIndex\" [disabled]=\"isDisabled\">\n    </md-checkbox>`,\n})\nclass CheckboxWithTabIndex {\n  customTabIndex: number = 7;\n  isDisabled: boolean = false;\n}\n\n/** Simple test component with an aria-label set. */\n@Component({\n  directives: [MdCheckbox],\n  template: `<md-checkbox aria-label=\"Super effective\"></md-checkbox>`\n})\nclass CheckboxWithAriaLabel { }\n\n// TODO(jelbourn): remove eveything below when Angular supports faking events.\n\n\nvar BROWSER_SUPPORTS_EVENT_CONSTRUCTORS: boolean = (function() {\n  // See: https://github.com/rauschma/event_constructors_check/blob/gh-pages/index.html#L39\n  try {\n    return new Event('submit', { bubbles: false }).bubbles === false &&\n           new Event('submit', { bubbles: true }).bubbles === true;\n  } catch (e) {\n    return false;\n  }\n})();\n\n\n/**\n * Dispatches a keyboard event from an element.\n * @param eventName The name of the event to dispatch, such as \"keydown\".\n * @param element The element from which the event will be dispatched.\n * @param key The key tied to the KeyboardEvent.\n * @returns The artifically created keyboard event.\n */\nfunction dispatchKeyboardEvent(eventName: string, element: HTMLElement, key: string): Event {\n  let keyboardEvent: Event;\n  if (BROWSER_SUPPORTS_EVENT_CONSTRUCTORS) {\n    keyboardEvent = new KeyboardEvent(eventName);\n  } else {\n    keyboardEvent = document.createEvent('Event');\n    keyboardEvent.initEvent(eventName, true, true);\n  }\n\n  // Hack DOM Level 3 Events \"key\" prop into keyboard event.\n  Object.defineProperty(keyboardEvent, 'key', {\n    value: key,\n    enumerable: false,\n    writable: false,\n    configurable: true,\n  });\n\n  // Using spyOn seems to be the *only* way to determine if preventDefault is called, since it\n  // seems that `defaultPrevented` does not get set with the technique.\n  spyOn(keyboardEvent, 'preventDefault').and.callThrough();\n\n  element.dispatchEvent(keyboardEvent);\n  return keyboardEvent;\n}\n\n"]}