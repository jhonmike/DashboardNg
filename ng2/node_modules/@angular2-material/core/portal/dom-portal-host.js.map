{"version":3,"file":"dom-portal-host.js","sourceRoot":"","sources":["dom-portal-host.ts"],"names":[],"mappings":";;;;;;AACA,uBAA8D,UAAU,CAAC,CAAA;AACzE,8BAA+D,iBAAiB,CAAC,CAAA;AAGjF;;;;;GAKG;AACH;IAAmC,iCAAc;IAC/C,uBACY,eAAwB,EACxB,gBAAwC;QAClD,iBAAO,CAAC;QAFE,oBAAe,GAAf,eAAe,CAAS;QACxB,qBAAgB,GAAhB,gBAAgB,CAAwB;IAEpD,CAAC;IAED,wFAAwF;IACxF,6CAAqB,GAArB,UAAsB,MAAuB;QAA7C,iBAYC;QAXC,EAAE,CAAC,CAAC,MAAM,CAAC,gBAAgB,IAAI,IAAI,CAAC,CAAC,CAAC;YACpC,MAAM,IAAI,gEAAgD,EAAE,CAAC;QAC/D,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAC3C,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,UAAA,GAAG;YACrD,IAAI,QAAQ,GAA0B,GAAG,CAAC,QAAQ,CAAC;YACnD,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACxD,KAAI,CAAC,YAAY,CAAC,cAAM,OAAA,GAAG,CAAC,OAAO,EAAE,EAAb,CAAa,CAAC,CAAC;YACvC,MAAM,CAAC,GAAG,CAAC;QACb,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAoB,GAApB,UAAqB,MAAsB;QAA3C,iBAeC;QAdC,IAAI,aAAa,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAC5C,IAAI,OAAO,GAAG,aAAa,CAAC,kBAAkB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAEnE,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,QAAQ,CAAC,EAA1C,CAA0C,CAAC,CAAC;QAElF,IAAI,CAAC,YAAY,CAAC,CAAC;YACjB,IAAI,KAAK,GAAG,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAC3C,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChB,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC9B,CAAC;QACH,CAAC,CAAC,CAAC,CAAC;QAEJ,2CAA2C;QAC3C,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,GAAG,EAAe,CAAC,CAAC;IACjD,CAAC;IAED,+BAAO,GAAP;QACE,gBAAK,CAAC,OAAO,WAAE,CAAC;QAChB,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACpE,CAAC;IACH,CAAC;IACH,oBAAC;AAAD,CAAC,AA7CD,CAAmC,uBAAc,GA6ChD;AA7CY,qBAAa,gBA6CzB,CAAA","sourcesContent":["import {DynamicComponentLoader, ComponentRef, EmbeddedViewRef} from '@angular/core';\nimport {BasePortalHost, ComponentPortal, TemplatePortal} from './portal';\nimport {MdComponentPortalAttachedToDomWithoutOriginError} from './portal-errors';\n\n\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\nexport class DomPortalHost extends BasePortalHost {\n  constructor(\n      private _hostDomElement: Element,\n      private _componentLoader: DynamicComponentLoader) {\n    super();\n  }\n\n  /** Attach the given ComponentPortal to DOM element using the DynamicComponentLoader. */\n  attachComponentPortal(portal: ComponentPortal): Promise<ComponentRef<any>> {\n    if (portal.viewContainerRef == null) {\n      throw new MdComponentPortalAttachedToDomWithoutOriginError();\n    }\n\n    return this._componentLoader.loadNextToLocation(\n        portal.component, portal.viewContainerRef).then(ref => {\n      let hostView = <EmbeddedViewRef<any>> ref.hostView;\n      this._hostDomElement.appendChild(hostView.rootNodes[0]);\n      this.setDisposeFn(() => ref.destroy());\n      return ref;\n    });\n  }\n\n  attachTemplatePortal(portal: TemplatePortal): Promise<Map<string, any>> {\n    let viewContainer = portal.viewContainerRef;\n    let viewRef = viewContainer.createEmbeddedView(portal.templateRef);\n\n    viewRef.rootNodes.forEach(rootNode => this._hostDomElement.appendChild(rootNode));\n\n    this.setDisposeFn((() => {\n      let index = viewContainer.indexOf(viewRef);\n      if (index != -1) {\n        viewContainer.remove(index);\n      }\n    }));\n\n    // TODO(jelbourn): Return locals from view.\n    return Promise.resolve(new Map<string, any>());\n  }\n\n  dispose(): void {\n    super.dispose();\n    if (this._hostDomElement.parentNode != null) {\n      this._hostDomElement.parentNode.removeChild(this._hostDomElement);\n    }\n  }\n}\n"]}