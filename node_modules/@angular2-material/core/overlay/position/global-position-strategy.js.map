{"version":3,"file":"global-position-strategy.js","sourceRoot":"","sources":["global-position-strategy.ts"],"names":[],"mappings":"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","sourcesContent":["import {PositionStrategy} from './position-strategy';\n\n\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport.\n */\nexport class GlobalPositionStrategy implements PositionStrategy {\n  private _cssPosition: string = 'absolute';\n  private _top: string = '';\n  private _bottom: string = '';\n  private _left: string = '';\n  private _right: string = '';\n\n  /** Array of individual applications of translateX(). Currently only for centering. */\n  private _translateX: string[] = [];\n\n  /** Array of individual applications of translateY(). Currently only for centering. */\n  private _translateY: string[] = [];\n\n  /** Sets the element to usee CSS position: fixed */\n  fixed() {\n    this._cssPosition = 'fixed';\n    return this;\n  }\n\n  /** Sets the element to usee CSS position: absolute. This is the default. */\n  absolute() {\n    this._cssPosition = 'absolute';\n    return this;\n  }\n\n  /** Sets the top position of the overlay. Clears any previously set vertical position. */\n  top(value: string) {\n    this._bottom = '';\n    this._translateY = [];\n    this._top = value;\n    return this;\n  }\n\n  /** Sets the left position of the overlay. Clears any previously set horizontal position. */\n  left(value: string) {\n    this._right = '';\n    this._translateX = [];\n    this._left = value;\n    return this;\n  }\n\n  /** Sets the bottom position of the overlay. Clears any previously set vertical position. */\n  bottom(value: string) {\n    this._top = '';\n    this._translateY = [];\n    this._bottom = value;\n    return this;\n  }\n\n  /** Sets the right position of the overlay. Clears any previously set horizontal position. */\n  right(value: string) {\n    this._left = '';\n    this._translateX = [];\n    this._right = value;\n    return this;\n  }\n\n  /**\n   * Centers the overlay horizontally with an optional offset.\n   * Clears any previously set horizontal position.\n   */\n  centerHorizontally(offset = '0px') {\n    this._left = '50%';\n    this._right = '';\n    this._translateX = ['-50%', offset];\n    return this;\n  }\n\n  /**\n   * Centers the overlay vertically with an optional offset.\n   * Clears any previously set vertical position.\n   */\n  centerVertically(offset = '0px') {\n    this._top = '50%';\n    this._bottom = '';\n    this._translateY = ['-50%', offset];\n    return this;\n  }\n\n  /** Apply the position to the element. */\n  apply(element: HTMLElement): Promise<void> {\n    element.style.position = this._cssPosition;\n    element.style.top = this._top;\n    element.style.left = this._left;\n    element.style.bottom = this._bottom;\n    element.style.right = this._right;\n\n    // TODO(jelbourn): we don't want to always overwrite the transform property here,\n    // because it will need to be used for animations.\n    let tranlateX = this._reduceTranslateValues('translateX', this._translateX);\n    let translateY = this._reduceTranslateValues('translateY', this._translateY);\n\n    // It's important to trim the result, because the browser will ignore the set operation\n    // if the string contains only whitespace.\n    element.style.transform = `${tranlateX} ${translateY}`.trim();\n\n    return Promise.resolve();\n  }\n\n  /** Reduce a list of translate values to a string that can be used in the transform property */\n  private _reduceTranslateValues(translateFn: string, values: string[]) {\n    return values.map(t => `${translateFn}(${t})`).join(' ');\n  }\n}\n"]}